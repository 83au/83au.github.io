(()=>{"use strict";const e=[{image:"./dist/resources/images/projects/tcg.jpg",title:"Tricking Combo Generator",summary:"A progressive web app that generates complex combinations of tricks from the sport of tricking. Users can choose the level of difficulty of the tricks they want in the combo.",technologies:"HTML, CSS, JavaScript, Webpack, Service Workers",github:"https://github.com/83au/TrickingComboGenerator",site:"https://www.trickingcombogenerator.com/"},{image:"./dist/resources/images/projects/markdown-previewer.jpg",title:"Markdown Previewer",summary:"A markdown editor and previewer built with React.",technologies:"React.js, CSS, marked.js, DOMPurify",github:"https://github.com/83au/Markdown-Previewer",site:"https://83au-markdown-previewer.netlify.app/"},{image:"./dist/resources/images/projects/weather-map.png",title:"Interactive Weather Map",summary:"An interactive map that reverse geocodes a location when you click on the map and then gives you the current weather for that area.",technologies:"HTML, CSS, JavaScript, Google Maps API, Google Geolocation API, Open Weather Map API, AWS Lambda",github:"https://github.com/83au/interactive_weather_map",site:"https://interactiveweathermap.netlify.app/"},{image:"./dist/resources/images/projects/virtual-tours.png",title:"Nicole's 3D Virtual Tours",summary:"A multi-page website filled with media of all types including: image, video, and iframes. This was my first paid project.",technologies:"HTML, CSS, JavaScript, jQuery, Webpack",github:"https://github.com/83au/Nicole-s-3D-Virtual-Tours",site:"https://www.nicoles3dvirtualtours.com/"},{image:"./dist/resources/images/projects/color-game.png",title:"Hexadecimal Color Game",summary:"A color guessing game. Users are given a hexadecimal color value and have to guess which of the displayed colors it corresponds to.",technologies:"HTML, CSS, JavaScript",github:"https://github.com/83au/The-Great-Hexadecimal-Color-Game",site:"https://www.beausherman.com/The-Great-Hexadecimal-Color-Game/"}];function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}function r(){var e=$('<div id="menu-bar" class="navbar__menu-bar"></div>');$("#navbar").append(e.get(0));var r=$(".navbar__desktop-menu a:first-child").get(0),a=r.getBoundingClientRect().left;e.get(0).style.setProperty("width","".concat(r.offsetWidth,"px")),e.get(0).style.setProperty("--start","".concat(a,"px"));var o,i=function(e){if(Array.isArray(e))return t(e)}(o=document.querySelectorAll("section"))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(o)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var a=Object.prototype.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?t(e,r):void 0}}(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=new IntersectionObserver((function(t){document.querySelectorAll(".navbar__link").forEach((function(e){return e.classList.remove("active")})),t.forEach((function(t){if(t.isIntersecting){var r=document.querySelector('a[href="#'.concat(t.target.classList[0],'"] text')),a=r.getBoundingClientRect().left;e.css({transform:"translateX(".concat(a,"px)"),width:"".concat(r.getBoundingClientRect().width,"px")}),r.parentElement.classList.add("active")}}))}),{threshold:.5});i.forEach((function(e){n.observe(e)}))}function a(e,t){e.forEach((function(e){e.isIntersecting&&(e.target.classList.add("active"),t.unobserve(e.target))}))}$((function(){var t,o,i;$("body").removeClass("preload"),$('[href^="#"]').smoothScroll(),$("footer").append((new Date).getFullYear()),$(".navbar__burger").click((function(){return $(".navbar__burger").toggleClass("active")})),$(".navbar a").click((function(){return $(".navbar__burger").removeClass("active")})),(t=$("<div></div>")).addClass("projects__container"),e.forEach((function(e){return t.append(function(e){return'\n      <div class="projects__card slide-in">\n          <div class="projects__card-side projects__card-side--front">\n            <div class="projects__image-container">\n              <img src="'.concat(e.image,'" alt="').concat(e.title,'">\n            </div>\n            <h4 class="project-title">').concat(e.title,'</h4>\n          </div>\n          <div class="projects__card-side projects__card-side--back">\n            <div class="project-details">\n              <p class="projects__project-summary">').concat(e.summary,'</p>\n              <div>\n                <h5 class="technologies-heading">Technologies Used:</h5>\n                <p class="technologies">').concat(e.technologies,'</p>\n              </div>\n            </div>\n            <div class="projects__links">\n              <a class="projects__more-info" href="').concat(e.github,'">\n                <button class="projects__button projects__button--left" aria-label="More information">GitHub</button>\n              </a>\n              <a class="projects__more-info" href="').concat(e.site,'">\n                <button class="projects__button projects__button--right" aria-label="More information">Site</button>\n              </a>\n            </div>\n          </div>\n        </div>\n    ')}(e))})),$("#projects").append(t),window.innerWidth>530&&r(),window.addEventListener("resize",function(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return function(){var o=this,i=arguments,n=function(){t=null,a||e.apply(o,i)},s=a&&!t;clearTimeout(t),t=setTimeout(n,r),s&&e.apply(o,i)}}((function(){var e=document.querySelector("#menu-bar");if(this.innerWidth>530){if(e)return;r()}else e&&e.remove()}))),o=$(".slide-in"),i=new IntersectionObserver(a),o.each((function(){var e=$(this).get(0);i.observe(e)}))}))})();